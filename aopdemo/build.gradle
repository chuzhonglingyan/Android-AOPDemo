apply plugin: 'com.android.application'

apply plugin: 'aspectj-plugin'
apply plugin: 'javassist-plugin'

apply plugin: 'walle'



android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.yuntian.aopdemo"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
        htmlReport true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    splits {
        abi {
            enable true
            reset()
            include 'armeabi', 'x86'
            universalApk true
        }
    }


    signingConfigs {
        //加载签名文件
        File propFile = file('sign.properties');
        if (propFile.exists()) {
            Properties props = new Properties()
            props.load(new FileInputStream(propFile))
            release {
                storeFile = file(props['STORE_FILE'])
                storePassword = props['STORE_PASSWORD']
                keyAlias = props['KEY_ALIAS']
                keyPassword = props['KEY_PASSWORD']

            }

            debug {
                storeFile = file(props['STORE_FILE'])
                storePassword = props['STORE_PASSWORD']
                keyAlias = props['KEY_ALIAS']
                keyPassword = props['KEY_PASSWORD']
            }
        } else {
            println 'signingConfigs:默认使用android.debug签名，可以在sign.properties自定义签名'
        }

    }

    buildTypes {

        release {

            signingConfig signingConfigs.release
            // 混淆
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {

            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

//    生成渠道包 ./gradlew clean assembleReleaseChannels
//    支持 productFlavors ./gradlew clean assembleMeituanReleaseChannels

    walle {
        // 指定渠道包的输出路径
        apkOutputFolder = new File("${project.buildDir}/outputs/channels");
        // 定制渠道包的APK的文件名称
        apkFileNameFormat = '${appName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
        // 渠道配置文件
        channelFile = new File("${rootProject.getProjectDir()}/channels/channels.txt")
    }


    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'org.aspectj:aspectjrt:1.8.9'
    implementation "com.meituan.android.walle:library:$rootProject.walleVersion"

    implementation "com.blankj:free-proguard:0.0.8"
    implementation project(':aopjlib')
}

//gradlew clean assembleReleaseChannels -PchannelList=meituan
//gradle clean assembleReleaseChannels -PchannelList=meituan